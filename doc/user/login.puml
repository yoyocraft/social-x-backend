@startuml

autonumber

actor user
participant "平台" as front
participant "Server" as backend
database "Redis" as redis
database "DB" as db
participant "Email" as email


user -> front: 点击登录
group 验证码登录
==发送验证码==
    user -> front: 输入邮箱
    front -> backend: 获取验证码
    backend -> backend: 校验邮箱合法性
    alt 校验错误
        backend --> front: 验证失败
    else 校验通过
        backend -> backend: 生成验证码
        backend -> redis: 存储验证码
        backend -> email: 发送验证码
    end

==验证码登录==
    user -> front: 输入验证码，登录
    backend -> backend: 校验验证码
    alt 校验错误
        backend --> front: 验证失败
    else 校验通过
        backend -> backend: 登录
        backend -> db: 查询对应的用户凭证信息
        note left
            对于邮箱进行 AES 加密后查询
        end note
        alt 新用户
            backend -> db: 创建用户信息 user_info
            backend -> db: 创建对应的用户凭证 user_auth
        end
        backend -> db: 查询用户信息 user_info
        backend -> backend: 生成用户登录态信息
        note right
            <font color=red><b>信息脱敏处理
        end note
        backend -> redis: 存储用户登录态信息
        alt#Gold #LightBlue 异步写入信息
            backend --> db: 此次登录信息（时间/IP/登录次数）
        end
        backend --> front: 返回登录态信息，登录成功
    end
end

group 密码登录
    user -> front: 输入账号（邮箱/手机号），密码
    front -> backend: 登录
    backend -> backend: 校验参数合法性
    alt 校验错误
        backend --> front: 验证失败
    else 校验通过
        backend -> db: 查询对应的用户凭证信息
        alt 未查询到
            backend --> front: 验证失败
        else 存在用户凭证
            backend -> backend: 校验密码
            alt 密码错误
                backend --> front: 验证失败
            else 密码正确
                backend -> db: 查询用户信息
                backend -> backend: 生成用户登录态信息
                backend -> redis: 存储用户登录态信息
                alt#Gold #LightBlue 异步写入信息
                    backend --> db: 此次登录信息（时间/IP/登录次数）
                end
                backend --> front: 返回登录态信息，登录成功
            end
        end
    end
end

group 三方登录 [TODO]
end
@enduml